
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaleftPLUSMINUSleftTIMESDIVIDEAND ASSIGN BEGIN DECREMENT DIVIDE ELSE END EQ FOR FUNCTION GE GT ID IF INCREMENT INTEGER JUNGLE_DIFF LBRACKET LCBRACKET LE LT MINUS NUMBER NUMBER_REAL OR PLC PLUS QUOTE RBRACKET RCBRACKET READ RETURN SEMICOLON STRING THEN TIMES VAR WHILE WRITE\n    programa : plc\n    \n    plc : PLC ID VAR declaracoes comandos\n    declaracoes : declaracao \n                | declaracoes declaracao\n    declaracao : ID SEMICOLON \n    \n    declaracao : ID ASSIGN NUMBER SEMICOLON \n    \n    declaracao : ID ASSIGN leitura \n    \n    declaracao : funcao\n    \n    comandos : comando\n             | comandos comando\n    \n    comando : atribuicao\n            | escrita\n            | selecao\n            | repeticao\n            | call\n            | incrementacao SEMICOLON\n    \n    leitura : READ LBRACKET texto RBRACKET SEMICOLON\n    \n    atribuicao : ID ASSIGN expressao SEMICOLON\n    \n    atribuicao : ID ASSIGN leitura\n    \n    escrita : WRITE LBRACKET argumento RBRACKET SEMICOLON\n    \n    argumento : texto\n    \n    argumento : expressao\n    \n    texto : QUOTE STRING QUOTE\n    \n    expressao : fator\n              | expressao PLUS expressao\n              | expressao MINUS expressao\n              | expressao TIMES expressao\n              | expressao DIVIDE expressao\n              \n    fator : ID\n          | NUMBER \n          | LBRACKET expressao RBRACKET\n    \n    selecao : IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET\n            | IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET\n    repeticao : FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET\n    \n    repeticao : WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET\n    \n    incrementacao : ID INCREMENT\n                  | ID DECREMENT\n    \n    condicao : condicao operador condicao\n             | expressao\n    \n    operador  : GT\n              | LT \n              | GE \n              | LE \n              | EQ \n              | JUNGLE_DIFF\n              | OR\n              | AND\n    \n    funcao : FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLONcall : ID LBRACKET RBRACKET SEMICOLON'
    
_lr_action_items = {'PLC':([0,],[3,]),'$end':([1,2,14,16,17,18,19,20,21,36,37,47,64,70,71,93,100,106,108,115,116,],[0,-1,-2,-9,-11,-12,-13,-14,-15,-10,-16,-19,-18,-49,-19,-20,-17,-32,-35,-34,-33,]),'ID':([3,5,7,8,9,10,11,14,15,16,17,18,19,20,21,29,31,36,37,38,39,40,41,42,43,47,49,52,60,62,64,65,66,67,68,70,71,75,76,77,78,79,80,81,82,83,86,93,95,97,98,100,101,104,106,108,109,111,112,113,114,115,116,],[4,6,13,-3,-8,27,-5,35,-4,-9,-11,-12,-13,-14,-15,-7,45,-10,-16,45,45,6,45,35,-6,-7,45,45,45,35,-18,45,45,45,45,-49,-19,45,-40,-41,-42,-43,-44,-45,-46,-47,45,-20,35,103,35,-17,35,35,-32,-35,-48,35,35,35,35,-34,-33,]),'VAR':([4,],[5,]),'FUNCTION':([5,7,8,9,11,15,29,40,43,47,100,109,],[10,10,-3,-8,-5,-4,-7,10,-6,-7,-17,-48,]),'SEMICOLON':([6,13,22,28,33,34,45,46,48,50,51,57,59,72,84,87,88,89,90,91,92,96,105,],[11,11,37,43,-36,-37,-29,43,64,-24,70,-30,-39,93,97,100,-25,-26,-27,-28,-31,-38,109,]),'ASSIGN':([6,13,35,],[12,31,52,]),'WRITE':([7,8,9,11,14,15,16,17,18,19,20,21,29,36,37,42,43,47,62,64,70,71,93,95,98,100,101,104,106,108,109,111,112,113,114,115,116,],[23,-3,-8,-5,23,-4,-9,-11,-12,-13,-14,-15,-7,-10,-16,23,-6,-7,23,-18,-49,-19,-20,23,23,-17,23,23,-32,-35,-48,23,23,23,23,-34,-33,]),'IF':([7,8,9,11,14,15,16,17,18,19,20,21,29,36,37,42,43,47,62,64,70,71,93,95,98,100,101,104,106,108,109,111,112,113,114,115,116,],[24,-3,-8,-5,24,-4,-9,-11,-12,-13,-14,-15,-7,-10,-16,24,-6,-7,24,-18,-49,-19,-20,24,24,-17,24,24,-32,-35,-48,24,24,24,24,-34,-33,]),'FOR':([7,8,9,11,14,15,16,17,18,19,20,21,29,36,37,42,43,47,62,64,70,71,93,95,98,100,101,104,106,108,109,111,112,113,114,115,116,],[25,-3,-8,-5,25,-4,-9,-11,-12,-13,-14,-15,-7,-10,-16,25,-6,-7,25,-18,-49,-19,-20,25,25,-17,25,25,-32,-35,-48,25,25,25,25,-34,-33,]),'WHILE':([7,8,9,11,14,15,16,17,18,19,20,21,29,36,37,42,43,47,62,64,70,71,93,95,98,100,101,104,106,108,109,111,112,113,114,115,116,],[26,-3,-8,-5,26,-4,-9,-11,-12,-13,-14,-15,-7,-10,-16,26,-6,-7,26,-18,-49,-19,-20,26,26,-17,26,26,-32,-35,-48,26,26,26,26,-34,-33,]),'NUMBER':([9,11,12,29,31,38,39,41,43,49,52,60,65,66,67,68,75,76,77,78,79,80,81,82,83,86,100,109,],[-8,-5,28,-7,46,57,57,57,-6,57,57,57,57,57,57,57,57,-40,-41,-42,-43,-44,-45,-46,-47,57,-17,-48,]),'LBRACKET':([9,11,13,23,24,25,26,29,30,31,35,38,39,41,43,49,52,60,65,66,67,68,75,76,77,78,79,80,81,82,83,86,100,109,],[-8,-5,32,38,39,40,41,-7,44,49,32,49,49,49,-6,49,49,49,49,49,49,49,49,-40,-41,-42,-43,-44,-45,-46,-47,49,-17,-48,]),'READ':([12,31,52,],[30,30,30,]),'INCREMENT':([13,35,103,],[33,33,33,]),'DECREMENT':([13,35,103,],[34,34,34,]),'RETURN':([16,17,18,19,20,21,36,37,62,64,70,71,93,100,106,108,115,116,],[-9,-11,-12,-13,-14,-15,-10,-16,86,-18,-49,-19,-20,-17,-32,-35,-34,-33,]),'RCBRACKET':([16,17,18,19,20,21,36,37,45,50,57,64,70,71,88,89,90,91,92,93,99,100,101,104,106,108,113,114,115,116,],[-9,-11,-12,-13,-14,-15,-10,-16,-29,-24,-30,-18,-49,-19,-25,-26,-27,-28,-31,-20,105,-17,106,108,-32,-35,115,116,-34,-33,]),'LCBRACKET':([27,74,85,107,110,],[42,95,98,111,112,]),'RBRACKET':([32,33,34,45,50,53,54,55,57,58,59,61,63,69,88,89,90,91,92,94,96,102,],[51,-36,-37,-29,-24,72,-21,-22,-30,74,-39,85,87,92,-25,-26,-27,-28,-31,-23,-38,107,]),'QUOTE':([38,44,73,],[56,56,94,]),'PLUS':([45,46,48,50,55,57,59,69,88,89,90,91,92,99,],[-29,-30,65,-24,65,-30,65,65,-25,-26,-27,-28,-31,65,]),'MINUS':([45,46,48,50,55,57,59,69,88,89,90,91,92,99,],[-29,-30,66,-24,66,-30,66,66,-25,-26,-27,-28,-31,66,]),'TIMES':([45,46,48,50,55,57,59,69,88,89,90,91,92,99,],[-29,-30,67,-24,67,-30,67,67,67,67,-27,-28,-31,67,]),'DIVIDE':([45,46,48,50,55,57,59,69,88,89,90,91,92,99,],[-29,-30,68,-24,68,-30,68,68,68,68,-27,-28,-31,68,]),'GT':([45,50,57,58,59,61,84,88,89,90,91,92,96,],[-29,-24,-30,76,-39,76,76,-25,-26,-27,-28,-31,76,]),'LT':([45,50,57,58,59,61,84,88,89,90,91,92,96,],[-29,-24,-30,77,-39,77,77,-25,-26,-27,-28,-31,77,]),'GE':([45,50,57,58,59,61,84,88,89,90,91,92,96,],[-29,-24,-30,78,-39,78,78,-25,-26,-27,-28,-31,78,]),'LE':([45,50,57,58,59,61,84,88,89,90,91,92,96,],[-29,-24,-30,79,-39,79,79,-25,-26,-27,-28,-31,79,]),'EQ':([45,50,57,58,59,61,84,88,89,90,91,92,96,],[-29,-24,-30,80,-39,80,80,-25,-26,-27,-28,-31,80,]),'JUNGLE_DIFF':([45,50,57,58,59,61,84,88,89,90,91,92,96,],[-29,-24,-30,81,-39,81,81,-25,-26,-27,-28,-31,81,]),'OR':([45,50,57,58,59,61,84,88,89,90,91,92,96,],[-29,-24,-30,82,-39,82,82,-25,-26,-27,-28,-31,82,]),'AND':([45,50,57,58,59,61,84,88,89,90,91,92,96,],[-29,-24,-30,83,-39,83,83,-25,-26,-27,-28,-31,83,]),'STRING':([56,],[73,]),'ELSE':([106,],[110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'plc':([0,],[2,]),'declaracoes':([5,],[7,]),'declaracao':([5,7,40,],[8,15,60,]),'funcao':([5,7,40,],[9,9,9,]),'comandos':([7,42,95,98,111,112,],[14,62,101,104,113,114,]),'comando':([7,14,42,62,95,98,101,104,111,112,113,114,],[16,36,16,36,16,16,36,36,16,16,36,36,]),'atribuicao':([7,14,42,62,95,98,101,104,111,112,113,114,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'escrita':([7,14,42,62,95,98,101,104,111,112,113,114,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'selecao':([7,14,42,62,95,98,101,104,111,112,113,114,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'repeticao':([7,14,42,62,95,98,101,104,111,112,113,114,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'call':([7,14,42,62,95,98,101,104,111,112,113,114,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'incrementacao':([7,14,42,62,95,97,98,101,104,111,112,113,114,],[22,22,22,22,22,102,22,22,22,22,22,22,22,]),'leitura':([12,31,52,],[29,47,71,]),'expressao':([31,38,39,41,49,52,60,65,66,67,68,75,86,],[48,55,59,59,69,48,59,88,89,90,91,59,99,]),'fator':([31,38,39,41,49,52,60,65,66,67,68,75,86,],[50,50,50,50,50,50,50,50,50,50,50,50,50,]),'argumento':([38,],[53,]),'texto':([38,44,],[54,63,]),'condicao':([39,41,60,75,],[58,61,84,96,]),'operador':([58,61,84,96,],[75,75,75,75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> plc','programa',1,'p_programa','parser.py',9),
  ('plc -> PLC ID VAR declaracoes comandos','plc',5,'p_plc','parser.py',15),
  ('declaracoes -> declaracao','declaracoes',1,'p_declaracoes','parser.py',20),
  ('declaracoes -> declaracoes declaracao','declaracoes',2,'p_declaracoes','parser.py',21),
  ('declaracao -> ID SEMICOLON','declaracao',2,'p_declaracao_vazia','parser.py',31),
  ('declaracao -> ID ASSIGN NUMBER SEMICOLON','declaracao',4,'p_declaracao_numero','parser.py',43),
  ('declaracao -> ID ASSIGN leitura','declaracao',3,'p_declaracao_leitura','parser.py',55),
  ('declaracao -> funcao','declaracao',1,'p_declaracao_funcao','parser.py',67),
  ('comandos -> comando','comandos',1,'p_comandos','parser.py',73),
  ('comandos -> comandos comando','comandos',2,'p_comandos','parser.py',74),
  ('comando -> atribuicao','comando',1,'p_comando','parser.py',80),
  ('comando -> escrita','comando',1,'p_comando','parser.py',81),
  ('comando -> selecao','comando',1,'p_comando','parser.py',82),
  ('comando -> repeticao','comando',1,'p_comando','parser.py',83),
  ('comando -> call','comando',1,'p_comando','parser.py',84),
  ('comando -> incrementacao SEMICOLON','comando',2,'p_comando','parser.py',85),
  ('leitura -> READ LBRACKET texto RBRACKET SEMICOLON','leitura',5,'p_leitura','parser.py',91),
  ('atribuicao -> ID ASSIGN expressao SEMICOLON','atribuicao',4,'p_atribuicao_expr','parser.py',99),
  ('atribuicao -> ID ASSIGN leitura','atribuicao',3,'p_atribuicao_leit','parser.py',109),
  ('escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON','escrita',5,'p_escrita','parser.py',119),
  ('argumento -> texto','argumento',1,'p_argumento_texto','parser.py',125),
  ('argumento -> expressao','argumento',1,'p_argumento_expr','parser.py',131),
  ('texto -> QUOTE STRING QUOTE','texto',3,'p_texto','parser.py',137),
  ('expressao -> fator','expressao',1,'p_expressao','parser.py',149),
  ('expressao -> expressao PLUS expressao','expressao',3,'p_expressao','parser.py',150),
  ('expressao -> expressao MINUS expressao','expressao',3,'p_expressao','parser.py',151),
  ('expressao -> expressao TIMES expressao','expressao',3,'p_expressao','parser.py',152),
  ('expressao -> expressao DIVIDE expressao','expressao',3,'p_expressao','parser.py',153),
  ('fator -> ID','fator',1,'p_fator','parser.py',168),
  ('fator -> NUMBER','fator',1,'p_fator','parser.py',169),
  ('fator -> LBRACKET expressao RBRACKET','fator',3,'p_fator','parser.py',170),
  ('selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET','selecao',7,'p_selecao','parser.py',181),
  ('selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET','selecao',11,'p_selecao','parser.py',182),
  ('repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET','repeticao',10,'p_repeticao_for','parser.py',203),
  ('repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET','repeticao',7,'p_repeticao_while','parser.py',212),
  ('incrementacao -> ID INCREMENT','incrementacao',2,'p_incrementacao','parser.py',226),
  ('incrementacao -> ID DECREMENT','incrementacao',2,'p_incrementacao','parser.py',227),
  ('condicao -> condicao operador condicao','condicao',3,'p_condicao','parser.py',240),
  ('condicao -> expressao','condicao',1,'p_condicao','parser.py',241),
  ('operador -> GT','operador',1,'p_operador','parser.py',261),
  ('operador -> LT','operador',1,'p_operador','parser.py',262),
  ('operador -> GE','operador',1,'p_operador','parser.py',263),
  ('operador -> LE','operador',1,'p_operador','parser.py',264),
  ('operador -> EQ','operador',1,'p_operador','parser.py',265),
  ('operador -> JUNGLE_DIFF','operador',1,'p_operador','parser.py',266),
  ('operador -> OR','operador',1,'p_operador','parser.py',267),
  ('operador -> AND','operador',1,'p_operador','parser.py',268),
  ('funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON','funcao',8,'p_funcao','parser.py',303),
  ('call -> ID LBRACKET RBRACKET SEMICOLON','call',4,'p_chamadaF','parser.py',316),
]
