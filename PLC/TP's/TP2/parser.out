Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BEGIN
    END
    INTEGER
    NUMBER_REAL
    THEN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> plc
Rule 2     plc -> PLC ID VAR declaracoes comandos
Rule 3     declaracoes -> declaracao
Rule 4     declaracoes -> declaracoes declaracao
Rule 5     declaracao -> ID SEMICOLON
Rule 6     declaracao -> ID ASSIGN NUMBER SEMICOLON
Rule 7     declaracao -> ID ASSIGN leitura
Rule 8     declaracao -> funcao
Rule 9     comandos -> comando
Rule 10    comandos -> comandos comando
Rule 11    comando -> atribuicao
Rule 12    comando -> escrita
Rule 13    comando -> selecao
Rule 14    comando -> repeticao
Rule 15    comando -> call
Rule 16    leitura -> READ LBRACKET texto RBRACKET SEMICOLON
Rule 17    atribuicao -> ID ASSIGN expressao SEMICOLON
Rule 18    atribuicao -> ID ASSIGN leitura SEMICOLON
Rule 19    escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON
Rule 20    argumento -> texto
Rule 21    argumento -> expressao
Rule 22    texto -> QUOTE STRING QUOTE
Rule 23    expressao -> fator
Rule 24    expressao -> expressao PLUS expressao
Rule 25    expressao -> expressao MINUS expressao
Rule 26    expressao -> expressao TIMES expressao
Rule 27    expressao -> expressao DIVIDE expressao
Rule 28    fator -> ID
Rule 29    fator -> NUMBER
Rule 30    fator -> LBRACKET expressao RBRACKET
Rule 31    selecao -> IF condicao : comandos
Rule 32    selecao -> IF condicao : comandos ELSE comandos
Rule 33    repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
Rule 34    repeticao -> WHILE LBRACKET condicao RBRACKET : comandos
Rule 35    incrementacao -> ID INCREMENT
Rule 36    incrementacao -> ID DECREMENT
Rule 37    condicao -> expressao operador expressao
Rule 38    operador -> GT
Rule 39    operador -> LT
Rule 40    operador -> GE
Rule 41    operador -> LE
Rule 42    operador -> EQ
Rule 43    operador -> JUNGLE_DIFF
Rule 44    operador -> OR
Rule 45    operador -> AND
Rule 46    funcao -> FUNCTION ID : comandos RETURN expressao SEMICOLON
Rule 47    call -> ID LBRACKET RBRACKET SEMICOLON

Terminals, with rules where they appear

:                    : 31 32 33 34 46
AND                  : 45
ASSIGN               : 6 7 17 18
BEGIN                : 
DECREMENT            : 36
DIVIDE               : 27
ELSE                 : 32
END                  : 
EQ                   : 42
FOR                  : 33
FUNCTION             : 46
GE                   : 40
GT                   : 38
ID                   : 2 5 6 7 17 18 28 35 36 46 47
IF                   : 31 32
INCREMENT            : 35
INTEGER              : 
JUNGLE_DIFF          : 43
LBRACKET             : 16 19 30 33 34 47
LE                   : 41
LT                   : 39
MINUS                : 25
NUMBER               : 6 29
NUMBER_REAL          : 
OR                   : 44
PLC                  : 2
PLUS                 : 24
QUOTE                : 22 22
RBRACKET             : 16 19 30 33 34 47
READ                 : 16
RETURN               : 46
SEMICOLON            : 5 6 16 17 18 19 33 33 46 47
STRING               : 22
THEN                 : 
TIMES                : 26
VAR                  : 2
WHILE                : 34
WRITE                : 19
error                : 

Nonterminals, with rules where they appear

argumento            : 19
atribuicao           : 11
call                 : 15
comando              : 9 10 33
comandos             : 2 10 31 32 32 34 46
condicao             : 31 32 33 34
declaracao           : 3 4 33
declaracoes          : 2 4
escrita              : 12
expressao            : 17 21 24 24 25 25 26 26 27 27 30 37 37 46
fator                : 23
funcao               : 8
incrementacao        : 33
leitura              : 7 18
operador             : 37
plc                  : 1
programa             : 0
repeticao            : 14
selecao              : 13
texto                : 16 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . plc
    (2) plc -> . PLC ID VAR declaracoes comandos

    PLC             shift and go to state 3

    programa                       shift and go to state 1
    plc                            shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> plc .

    $end            reduce using rule 1 (programa -> plc .)


state 3

    (2) plc -> PLC . ID VAR declaracoes comandos

    ID              shift and go to state 4


state 4

    (2) plc -> PLC ID . VAR declaracoes comandos

    VAR             shift and go to state 5


state 5

    (2) plc -> PLC ID VAR . declaracoes comandos
    (3) declaracoes -> . declaracao
    (4) declaracoes -> . declaracoes declaracao
    (5) declaracao -> . ID SEMICOLON
    (6) declaracao -> . ID ASSIGN NUMBER SEMICOLON
    (7) declaracao -> . ID ASSIGN leitura
    (8) declaracao -> . funcao
    (46) funcao -> . FUNCTION ID : comandos RETURN expressao SEMICOLON

    ID              shift and go to state 6
    FUNCTION        shift and go to state 10

    declaracoes                    shift and go to state 7
    declaracao                     shift and go to state 8
    funcao                         shift and go to state 9

state 6

    (5) declaracao -> ID . SEMICOLON
    (6) declaracao -> ID . ASSIGN NUMBER SEMICOLON
    (7) declaracao -> ID . ASSIGN leitura

    SEMICOLON       shift and go to state 11
    ASSIGN          shift and go to state 12


state 7

    (2) plc -> PLC ID VAR declaracoes . comandos
    (4) declaracoes -> declaracoes . declaracao
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (5) declaracao -> . ID SEMICOLON
    (6) declaracao -> . ID ASSIGN NUMBER SEMICOLON
    (7) declaracao -> . ID ASSIGN leitura
    (8) declaracao -> . funcao
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (46) funcao -> . FUNCTION ID : comandos RETURN expressao SEMICOLON
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

    ID              shift and go to state 13
    FUNCTION        shift and go to state 10
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

    comandos                       shift and go to state 14
    declaracao                     shift and go to state 15
    comando                        shift and go to state 16
    funcao                         shift and go to state 9
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 8

    (3) declaracoes -> declaracao .

    ID              reduce using rule 3 (declaracoes -> declaracao .)
    FUNCTION        reduce using rule 3 (declaracoes -> declaracao .)
    WRITE           reduce using rule 3 (declaracoes -> declaracao .)
    IF              reduce using rule 3 (declaracoes -> declaracao .)
    FOR             reduce using rule 3 (declaracoes -> declaracao .)
    WHILE           reduce using rule 3 (declaracoes -> declaracao .)


state 9

    (8) declaracao -> funcao .

    ID              reduce using rule 8 (declaracao -> funcao .)
    FUNCTION        reduce using rule 8 (declaracao -> funcao .)
    WRITE           reduce using rule 8 (declaracao -> funcao .)
    IF              reduce using rule 8 (declaracao -> funcao .)
    FOR             reduce using rule 8 (declaracao -> funcao .)
    WHILE           reduce using rule 8 (declaracao -> funcao .)
    SEMICOLON       reduce using rule 8 (declaracao -> funcao .)


state 10

    (46) funcao -> FUNCTION . ID : comandos RETURN expressao SEMICOLON

    ID              shift and go to state 26


state 11

    (5) declaracao -> ID SEMICOLON .

    ID              reduce using rule 5 (declaracao -> ID SEMICOLON .)
    FUNCTION        reduce using rule 5 (declaracao -> ID SEMICOLON .)
    WRITE           reduce using rule 5 (declaracao -> ID SEMICOLON .)
    IF              reduce using rule 5 (declaracao -> ID SEMICOLON .)
    FOR             reduce using rule 5 (declaracao -> ID SEMICOLON .)
    WHILE           reduce using rule 5 (declaracao -> ID SEMICOLON .)
    SEMICOLON       reduce using rule 5 (declaracao -> ID SEMICOLON .)


state 12

    (6) declaracao -> ID ASSIGN . NUMBER SEMICOLON
    (7) declaracao -> ID ASSIGN . leitura
    (16) leitura -> . READ LBRACKET texto RBRACKET SEMICOLON

    NUMBER          shift and go to state 27
    READ            shift and go to state 29

    leitura                        shift and go to state 28

state 13

    (5) declaracao -> ID . SEMICOLON
    (6) declaracao -> ID . ASSIGN NUMBER SEMICOLON
    (7) declaracao -> ID . ASSIGN leitura
    (17) atribuicao -> ID . ASSIGN expressao SEMICOLON
    (18) atribuicao -> ID . ASSIGN leitura SEMICOLON
    (47) call -> ID . LBRACKET RBRACKET SEMICOLON

    SEMICOLON       shift and go to state 11
    ASSIGN          shift and go to state 30
    LBRACKET        shift and go to state 31


state 14

    (2) plc -> PLC ID VAR declaracoes comandos .
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

    $end            reduce using rule 2 (plc -> PLC ID VAR declaracoes comandos .)
    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

    comando                        shift and go to state 33
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 15

    (4) declaracoes -> declaracoes declaracao .

    ID              reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    FUNCTION        reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    WRITE           reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    IF              reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    FOR             reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    WHILE           reduce using rule 4 (declaracoes -> declaracoes declaracao .)


state 16

    (9) comandos -> comando .

    ID              reduce using rule 9 (comandos -> comando .)
    WRITE           reduce using rule 9 (comandos -> comando .)
    IF              reduce using rule 9 (comandos -> comando .)
    FOR             reduce using rule 9 (comandos -> comando .)
    WHILE           reduce using rule 9 (comandos -> comando .)
    $end            reduce using rule 9 (comandos -> comando .)
    RETURN          reduce using rule 9 (comandos -> comando .)
    ELSE            reduce using rule 9 (comandos -> comando .)


state 17

    (11) comando -> atribuicao .

    ID              reduce using rule 11 (comando -> atribuicao .)
    WRITE           reduce using rule 11 (comando -> atribuicao .)
    IF              reduce using rule 11 (comando -> atribuicao .)
    FOR             reduce using rule 11 (comando -> atribuicao .)
    WHILE           reduce using rule 11 (comando -> atribuicao .)
    $end            reduce using rule 11 (comando -> atribuicao .)
    RETURN          reduce using rule 11 (comando -> atribuicao .)
    ELSE            reduce using rule 11 (comando -> atribuicao .)


state 18

    (12) comando -> escrita .

    ID              reduce using rule 12 (comando -> escrita .)
    WRITE           reduce using rule 12 (comando -> escrita .)
    IF              reduce using rule 12 (comando -> escrita .)
    FOR             reduce using rule 12 (comando -> escrita .)
    WHILE           reduce using rule 12 (comando -> escrita .)
    $end            reduce using rule 12 (comando -> escrita .)
    RETURN          reduce using rule 12 (comando -> escrita .)
    ELSE            reduce using rule 12 (comando -> escrita .)


state 19

    (13) comando -> selecao .

    ID              reduce using rule 13 (comando -> selecao .)
    WRITE           reduce using rule 13 (comando -> selecao .)
    IF              reduce using rule 13 (comando -> selecao .)
    FOR             reduce using rule 13 (comando -> selecao .)
    WHILE           reduce using rule 13 (comando -> selecao .)
    $end            reduce using rule 13 (comando -> selecao .)
    RETURN          reduce using rule 13 (comando -> selecao .)
    ELSE            reduce using rule 13 (comando -> selecao .)


state 20

    (14) comando -> repeticao .

    ID              reduce using rule 14 (comando -> repeticao .)
    WRITE           reduce using rule 14 (comando -> repeticao .)
    IF              reduce using rule 14 (comando -> repeticao .)
    FOR             reduce using rule 14 (comando -> repeticao .)
    WHILE           reduce using rule 14 (comando -> repeticao .)
    $end            reduce using rule 14 (comando -> repeticao .)
    RETURN          reduce using rule 14 (comando -> repeticao .)
    ELSE            reduce using rule 14 (comando -> repeticao .)


state 21

    (15) comando -> call .

    ID              reduce using rule 15 (comando -> call .)
    WRITE           reduce using rule 15 (comando -> call .)
    IF              reduce using rule 15 (comando -> call .)
    FOR             reduce using rule 15 (comando -> call .)
    WHILE           reduce using rule 15 (comando -> call .)
    $end            reduce using rule 15 (comando -> call .)
    RETURN          reduce using rule 15 (comando -> call .)
    ELSE            reduce using rule 15 (comando -> call .)


state 22

    (19) escrita -> WRITE . LBRACKET argumento RBRACKET SEMICOLON

    LBRACKET        shift and go to state 34


state 23

    (31) selecao -> IF . condicao : comandos
    (32) selecao -> IF . condicao : comandos ELSE comandos
    (37) condicao -> . expressao operador expressao
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    condicao                       shift and go to state 35
    expressao                      shift and go to state 36
    fator                          shift and go to state 37

state 24

    (33) repeticao -> FOR . LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando

    LBRACKET        shift and go to state 41


state 25

    (34) repeticao -> WHILE . LBRACKET condicao RBRACKET : comandos

    LBRACKET        shift and go to state 42


state 26

    (46) funcao -> FUNCTION ID . : comandos RETURN expressao SEMICOLON

    :               shift and go to state 43


state 27

    (6) declaracao -> ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 44


state 28

    (7) declaracao -> ID ASSIGN leitura .

    ID              reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    FUNCTION        reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    WRITE           reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    IF              reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    FOR             reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    WHILE           reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    SEMICOLON       reduce using rule 7 (declaracao -> ID ASSIGN leitura .)


state 29

    (16) leitura -> READ . LBRACKET texto RBRACKET SEMICOLON

    LBRACKET        shift and go to state 45


state 30

    (6) declaracao -> ID ASSIGN . NUMBER SEMICOLON
    (7) declaracao -> ID ASSIGN . leitura
    (17) atribuicao -> ID ASSIGN . expressao SEMICOLON
    (18) atribuicao -> ID ASSIGN . leitura SEMICOLON
    (16) leitura -> . READ LBRACKET texto RBRACKET SEMICOLON
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    NUMBER          shift and go to state 46
    READ            shift and go to state 29
    ID              shift and go to state 38
    LBRACKET        shift and go to state 40

    leitura                        shift and go to state 47
    expressao                      shift and go to state 48
    fator                          shift and go to state 37

state 31

    (47) call -> ID LBRACKET . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 49


state 32

    (17) atribuicao -> ID . ASSIGN expressao SEMICOLON
    (18) atribuicao -> ID . ASSIGN leitura SEMICOLON
    (47) call -> ID . LBRACKET RBRACKET SEMICOLON

    ASSIGN          shift and go to state 50
    LBRACKET        shift and go to state 31


state 33

    (10) comandos -> comandos comando .

    ID              reduce using rule 10 (comandos -> comandos comando .)
    WRITE           reduce using rule 10 (comandos -> comandos comando .)
    IF              reduce using rule 10 (comandos -> comandos comando .)
    FOR             reduce using rule 10 (comandos -> comandos comando .)
    WHILE           reduce using rule 10 (comandos -> comandos comando .)
    $end            reduce using rule 10 (comandos -> comandos comando .)
    RETURN          reduce using rule 10 (comandos -> comandos comando .)
    ELSE            reduce using rule 10 (comandos -> comandos comando .)


state 34

    (19) escrita -> WRITE LBRACKET . argumento RBRACKET SEMICOLON
    (20) argumento -> . texto
    (21) argumento -> . expressao
    (22) texto -> . QUOTE STRING QUOTE
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    QUOTE           shift and go to state 54
    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    argumento                      shift and go to state 51
    texto                          shift and go to state 52
    expressao                      shift and go to state 53
    fator                          shift and go to state 37

state 35

    (31) selecao -> IF condicao . : comandos
    (32) selecao -> IF condicao . : comandos ELSE comandos

    :               shift and go to state 55


state 36

    (37) condicao -> expressao . operador expressao
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao
    (38) operador -> . GT
    (39) operador -> . LT
    (40) operador -> . GE
    (41) operador -> . LE
    (42) operador -> . EQ
    (43) operador -> . JUNGLE_DIFF
    (44) operador -> . OR
    (45) operador -> . AND

    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    GE              shift and go to state 63
    LE              shift and go to state 64
    EQ              shift and go to state 65
    JUNGLE_DIFF     shift and go to state 66
    OR              shift and go to state 67
    AND             shift and go to state 68

    operador                       shift and go to state 56

state 37

    (23) expressao -> fator .

    PLUS            reduce using rule 23 (expressao -> fator .)
    MINUS           reduce using rule 23 (expressao -> fator .)
    TIMES           reduce using rule 23 (expressao -> fator .)
    DIVIDE          reduce using rule 23 (expressao -> fator .)
    GT              reduce using rule 23 (expressao -> fator .)
    LT              reduce using rule 23 (expressao -> fator .)
    GE              reduce using rule 23 (expressao -> fator .)
    LE              reduce using rule 23 (expressao -> fator .)
    EQ              reduce using rule 23 (expressao -> fator .)
    JUNGLE_DIFF     reduce using rule 23 (expressao -> fator .)
    OR              reduce using rule 23 (expressao -> fator .)
    AND             reduce using rule 23 (expressao -> fator .)
    SEMICOLON       reduce using rule 23 (expressao -> fator .)
    RBRACKET        reduce using rule 23 (expressao -> fator .)
    :               reduce using rule 23 (expressao -> fator .)


state 38

    (28) fator -> ID .

    PLUS            reduce using rule 28 (fator -> ID .)
    MINUS           reduce using rule 28 (fator -> ID .)
    TIMES           reduce using rule 28 (fator -> ID .)
    DIVIDE          reduce using rule 28 (fator -> ID .)
    GT              reduce using rule 28 (fator -> ID .)
    LT              reduce using rule 28 (fator -> ID .)
    GE              reduce using rule 28 (fator -> ID .)
    LE              reduce using rule 28 (fator -> ID .)
    EQ              reduce using rule 28 (fator -> ID .)
    JUNGLE_DIFF     reduce using rule 28 (fator -> ID .)
    OR              reduce using rule 28 (fator -> ID .)
    AND             reduce using rule 28 (fator -> ID .)
    SEMICOLON       reduce using rule 28 (fator -> ID .)
    RBRACKET        reduce using rule 28 (fator -> ID .)
    :               reduce using rule 28 (fator -> ID .)


state 39

    (29) fator -> NUMBER .

    PLUS            reduce using rule 29 (fator -> NUMBER .)
    MINUS           reduce using rule 29 (fator -> NUMBER .)
    TIMES           reduce using rule 29 (fator -> NUMBER .)
    DIVIDE          reduce using rule 29 (fator -> NUMBER .)
    GT              reduce using rule 29 (fator -> NUMBER .)
    LT              reduce using rule 29 (fator -> NUMBER .)
    GE              reduce using rule 29 (fator -> NUMBER .)
    LE              reduce using rule 29 (fator -> NUMBER .)
    EQ              reduce using rule 29 (fator -> NUMBER .)
    JUNGLE_DIFF     reduce using rule 29 (fator -> NUMBER .)
    OR              reduce using rule 29 (fator -> NUMBER .)
    AND             reduce using rule 29 (fator -> NUMBER .)
    RBRACKET        reduce using rule 29 (fator -> NUMBER .)
    SEMICOLON       reduce using rule 29 (fator -> NUMBER .)
    :               reduce using rule 29 (fator -> NUMBER .)


state 40

    (30) fator -> LBRACKET . expressao RBRACKET
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    expressao                      shift and go to state 69
    fator                          shift and go to state 37

state 41

    (33) repeticao -> FOR LBRACKET . declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (5) declaracao -> . ID SEMICOLON
    (6) declaracao -> . ID ASSIGN NUMBER SEMICOLON
    (7) declaracao -> . ID ASSIGN leitura
    (8) declaracao -> . funcao
    (46) funcao -> . FUNCTION ID : comandos RETURN expressao SEMICOLON

    ID              shift and go to state 6
    FUNCTION        shift and go to state 10

    declaracao                     shift and go to state 70
    funcao                         shift and go to state 9

state 42

    (34) repeticao -> WHILE LBRACKET . condicao RBRACKET : comandos
    (37) condicao -> . expressao operador expressao
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    condicao                       shift and go to state 71
    expressao                      shift and go to state 36
    fator                          shift and go to state 37

state 43

    (46) funcao -> FUNCTION ID : . comandos RETURN expressao SEMICOLON
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

    comandos                       shift and go to state 72
    comando                        shift and go to state 16
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 44

    (6) declaracao -> ID ASSIGN NUMBER SEMICOLON .

    ID              reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    FUNCTION        reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    WRITE           reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    IF              reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    FOR             reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    WHILE           reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    SEMICOLON       reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)


state 45

    (16) leitura -> READ LBRACKET . texto RBRACKET SEMICOLON
    (22) texto -> . QUOTE STRING QUOTE

    QUOTE           shift and go to state 54

    texto                          shift and go to state 73

state 46

    (6) declaracao -> ID ASSIGN NUMBER . SEMICOLON
    (29) fator -> NUMBER .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 44
    PLUS            reduce using rule 29 (fator -> NUMBER .)
    MINUS           reduce using rule 29 (fator -> NUMBER .)
    TIMES           reduce using rule 29 (fator -> NUMBER .)
    DIVIDE          reduce using rule 29 (fator -> NUMBER .)

  ! SEMICOLON       [ reduce using rule 29 (fator -> NUMBER .) ]


state 47

    (7) declaracao -> ID ASSIGN leitura .
    (18) atribuicao -> ID ASSIGN leitura . SEMICOLON

    ID              reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    FUNCTION        reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    WRITE           reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    IF              reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    FOR             reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    WHILE           reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    SEMICOLON       shift and go to state 74


state 48

    (17) atribuicao -> ID ASSIGN expressao . SEMICOLON
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao

    SEMICOLON       shift and go to state 75
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60


state 49

    (47) call -> ID LBRACKET RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 76


state 50

    (17) atribuicao -> ID ASSIGN . expressao SEMICOLON
    (18) atribuicao -> ID ASSIGN . leitura SEMICOLON
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (16) leitura -> . READ LBRACKET texto RBRACKET SEMICOLON
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    READ            shift and go to state 29
    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    expressao                      shift and go to state 48
    leitura                        shift and go to state 77
    fator                          shift and go to state 37

state 51

    (19) escrita -> WRITE LBRACKET argumento . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 78


state 52

    (20) argumento -> texto .

    RBRACKET        reduce using rule 20 (argumento -> texto .)


state 53

    (21) argumento -> expressao .
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao

    RBRACKET        reduce using rule 21 (argumento -> expressao .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60


state 54

    (22) texto -> QUOTE . STRING QUOTE

    STRING          shift and go to state 79


state 55

    (31) selecao -> IF condicao : . comandos
    (32) selecao -> IF condicao : . comandos ELSE comandos
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

    comandos                       shift and go to state 80
    comando                        shift and go to state 16
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 56

    (37) condicao -> expressao operador . expressao
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    expressao                      shift and go to state 81
    fator                          shift and go to state 37

state 57

    (24) expressao -> expressao PLUS . expressao
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    expressao                      shift and go to state 82
    fator                          shift and go to state 37

state 58

    (25) expressao -> expressao MINUS . expressao
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    expressao                      shift and go to state 83
    fator                          shift and go to state 37

state 59

    (26) expressao -> expressao TIMES . expressao
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    expressao                      shift and go to state 84
    fator                          shift and go to state 37

state 60

    (27) expressao -> expressao DIVIDE . expressao
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    expressao                      shift and go to state 85
    fator                          shift and go to state 37

state 61

    (38) operador -> GT .

    ID              reduce using rule 38 (operador -> GT .)
    NUMBER          reduce using rule 38 (operador -> GT .)
    LBRACKET        reduce using rule 38 (operador -> GT .)


state 62

    (39) operador -> LT .

    ID              reduce using rule 39 (operador -> LT .)
    NUMBER          reduce using rule 39 (operador -> LT .)
    LBRACKET        reduce using rule 39 (operador -> LT .)


state 63

    (40) operador -> GE .

    ID              reduce using rule 40 (operador -> GE .)
    NUMBER          reduce using rule 40 (operador -> GE .)
    LBRACKET        reduce using rule 40 (operador -> GE .)


state 64

    (41) operador -> LE .

    ID              reduce using rule 41 (operador -> LE .)
    NUMBER          reduce using rule 41 (operador -> LE .)
    LBRACKET        reduce using rule 41 (operador -> LE .)


state 65

    (42) operador -> EQ .

    ID              reduce using rule 42 (operador -> EQ .)
    NUMBER          reduce using rule 42 (operador -> EQ .)
    LBRACKET        reduce using rule 42 (operador -> EQ .)


state 66

    (43) operador -> JUNGLE_DIFF .

    ID              reduce using rule 43 (operador -> JUNGLE_DIFF .)
    NUMBER          reduce using rule 43 (operador -> JUNGLE_DIFF .)
    LBRACKET        reduce using rule 43 (operador -> JUNGLE_DIFF .)


state 67

    (44) operador -> OR .

    ID              reduce using rule 44 (operador -> OR .)
    NUMBER          reduce using rule 44 (operador -> OR .)
    LBRACKET        reduce using rule 44 (operador -> OR .)


state 68

    (45) operador -> AND .

    ID              reduce using rule 45 (operador -> AND .)
    NUMBER          reduce using rule 45 (operador -> AND .)
    LBRACKET        reduce using rule 45 (operador -> AND .)


state 69

    (30) fator -> LBRACKET expressao . RBRACKET
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao

    RBRACKET        shift and go to state 86
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60


state 70

    (33) repeticao -> FOR LBRACKET declaracao . SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando

    SEMICOLON       shift and go to state 87


state 71

    (34) repeticao -> WHILE LBRACKET condicao . RBRACKET : comandos

    RBRACKET        shift and go to state 88


state 72

    (46) funcao -> FUNCTION ID : comandos . RETURN expressao SEMICOLON
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

    RETURN          shift and go to state 89
    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

    comando                        shift and go to state 33
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 73

    (16) leitura -> READ LBRACKET texto . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 90


state 74

    (18) atribuicao -> ID ASSIGN leitura SEMICOLON .

    ID              reduce using rule 18 (atribuicao -> ID ASSIGN leitura SEMICOLON .)
    WRITE           reduce using rule 18 (atribuicao -> ID ASSIGN leitura SEMICOLON .)
    IF              reduce using rule 18 (atribuicao -> ID ASSIGN leitura SEMICOLON .)
    FOR             reduce using rule 18 (atribuicao -> ID ASSIGN leitura SEMICOLON .)
    WHILE           reduce using rule 18 (atribuicao -> ID ASSIGN leitura SEMICOLON .)
    $end            reduce using rule 18 (atribuicao -> ID ASSIGN leitura SEMICOLON .)
    RETURN          reduce using rule 18 (atribuicao -> ID ASSIGN leitura SEMICOLON .)
    ELSE            reduce using rule 18 (atribuicao -> ID ASSIGN leitura SEMICOLON .)


state 75

    (17) atribuicao -> ID ASSIGN expressao SEMICOLON .

    ID              reduce using rule 17 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    WRITE           reduce using rule 17 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    IF              reduce using rule 17 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    FOR             reduce using rule 17 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    WHILE           reduce using rule 17 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    $end            reduce using rule 17 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    RETURN          reduce using rule 17 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    ELSE            reduce using rule 17 (atribuicao -> ID ASSIGN expressao SEMICOLON .)


state 76

    (47) call -> ID LBRACKET RBRACKET SEMICOLON .

    ID              reduce using rule 47 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    WRITE           reduce using rule 47 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    IF              reduce using rule 47 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    FOR             reduce using rule 47 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    WHILE           reduce using rule 47 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 47 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    RETURN          reduce using rule 47 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    ELSE            reduce using rule 47 (call -> ID LBRACKET RBRACKET SEMICOLON .)


state 77

    (18) atribuicao -> ID ASSIGN leitura . SEMICOLON

    SEMICOLON       shift and go to state 74


state 78

    (19) escrita -> WRITE LBRACKET argumento RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 91


state 79

    (22) texto -> QUOTE STRING . QUOTE

    QUOTE           shift and go to state 92


state 80

    (31) selecao -> IF condicao : comandos .
    (32) selecao -> IF condicao : comandos . ELSE comandos
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    $end            reduce using rule 31 (selecao -> IF condicao : comandos .)
    RETURN          reduce using rule 31 (selecao -> IF condicao : comandos .)
    ELSE            shift and go to state 93
    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

  ! ID              [ reduce using rule 31 (selecao -> IF condicao : comandos .) ]
  ! WRITE           [ reduce using rule 31 (selecao -> IF condicao : comandos .) ]
  ! IF              [ reduce using rule 31 (selecao -> IF condicao : comandos .) ]
  ! FOR             [ reduce using rule 31 (selecao -> IF condicao : comandos .) ]
  ! WHILE           [ reduce using rule 31 (selecao -> IF condicao : comandos .) ]
  ! ELSE            [ reduce using rule 31 (selecao -> IF condicao : comandos .) ]

    comando                        shift and go to state 33
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 81

    (37) condicao -> expressao operador expressao .
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao

    :               reduce using rule 37 (condicao -> expressao operador expressao .)
    RBRACKET        reduce using rule 37 (condicao -> expressao operador expressao .)
    SEMICOLON       reduce using rule 37 (condicao -> expressao operador expressao .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60


state 82

    (24) expressao -> expressao PLUS expressao .
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GT              reduce using rule 24 (expressao -> expressao PLUS expressao .)
    LT              reduce using rule 24 (expressao -> expressao PLUS expressao .)
    GE              reduce using rule 24 (expressao -> expressao PLUS expressao .)
    LE              reduce using rule 24 (expressao -> expressao PLUS expressao .)
    EQ              reduce using rule 24 (expressao -> expressao PLUS expressao .)
    JUNGLE_DIFF     reduce using rule 24 (expressao -> expressao PLUS expressao .)
    OR              reduce using rule 24 (expressao -> expressao PLUS expressao .)
    AND             reduce using rule 24 (expressao -> expressao PLUS expressao .)
    SEMICOLON       reduce using rule 24 (expressao -> expressao PLUS expressao .)
    RBRACKET        reduce using rule 24 (expressao -> expressao PLUS expressao .)
    :               reduce using rule 24 (expressao -> expressao PLUS expressao .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60

  ! PLUS            [ reduce using rule 24 (expressao -> expressao PLUS expressao .) ]
  ! MINUS           [ reduce using rule 24 (expressao -> expressao PLUS expressao .) ]
  ! TIMES           [ reduce using rule 24 (expressao -> expressao PLUS expressao .) ]
  ! DIVIDE          [ reduce using rule 24 (expressao -> expressao PLUS expressao .) ]


state 83

    (25) expressao -> expressao MINUS expressao .
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GT              reduce using rule 25 (expressao -> expressao MINUS expressao .)
    LT              reduce using rule 25 (expressao -> expressao MINUS expressao .)
    GE              reduce using rule 25 (expressao -> expressao MINUS expressao .)
    LE              reduce using rule 25 (expressao -> expressao MINUS expressao .)
    EQ              reduce using rule 25 (expressao -> expressao MINUS expressao .)
    JUNGLE_DIFF     reduce using rule 25 (expressao -> expressao MINUS expressao .)
    OR              reduce using rule 25 (expressao -> expressao MINUS expressao .)
    AND             reduce using rule 25 (expressao -> expressao MINUS expressao .)
    SEMICOLON       reduce using rule 25 (expressao -> expressao MINUS expressao .)
    RBRACKET        reduce using rule 25 (expressao -> expressao MINUS expressao .)
    :               reduce using rule 25 (expressao -> expressao MINUS expressao .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60

  ! PLUS            [ reduce using rule 25 (expressao -> expressao MINUS expressao .) ]
  ! MINUS           [ reduce using rule 25 (expressao -> expressao MINUS expressao .) ]
  ! TIMES           [ reduce using rule 25 (expressao -> expressao MINUS expressao .) ]
  ! DIVIDE          [ reduce using rule 25 (expressao -> expressao MINUS expressao .) ]


state 84

    (26) expressao -> expressao TIMES expressao .
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GT              reduce using rule 26 (expressao -> expressao TIMES expressao .)
    LT              reduce using rule 26 (expressao -> expressao TIMES expressao .)
    GE              reduce using rule 26 (expressao -> expressao TIMES expressao .)
    LE              reduce using rule 26 (expressao -> expressao TIMES expressao .)
    EQ              reduce using rule 26 (expressao -> expressao TIMES expressao .)
    JUNGLE_DIFF     reduce using rule 26 (expressao -> expressao TIMES expressao .)
    OR              reduce using rule 26 (expressao -> expressao TIMES expressao .)
    AND             reduce using rule 26 (expressao -> expressao TIMES expressao .)
    SEMICOLON       reduce using rule 26 (expressao -> expressao TIMES expressao .)
    RBRACKET        reduce using rule 26 (expressao -> expressao TIMES expressao .)
    :               reduce using rule 26 (expressao -> expressao TIMES expressao .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60

  ! PLUS            [ reduce using rule 26 (expressao -> expressao TIMES expressao .) ]
  ! MINUS           [ reduce using rule 26 (expressao -> expressao TIMES expressao .) ]
  ! TIMES           [ reduce using rule 26 (expressao -> expressao TIMES expressao .) ]
  ! DIVIDE          [ reduce using rule 26 (expressao -> expressao TIMES expressao .) ]


state 85

    (27) expressao -> expressao DIVIDE expressao .
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GT              reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    LT              reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    GE              reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    LE              reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    EQ              reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    JUNGLE_DIFF     reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    OR              reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    AND             reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    SEMICOLON       reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    RBRACKET        reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    :               reduce using rule 27 (expressao -> expressao DIVIDE expressao .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60

  ! PLUS            [ reduce using rule 27 (expressao -> expressao DIVIDE expressao .) ]
  ! MINUS           [ reduce using rule 27 (expressao -> expressao DIVIDE expressao .) ]
  ! TIMES           [ reduce using rule 27 (expressao -> expressao DIVIDE expressao .) ]
  ! DIVIDE          [ reduce using rule 27 (expressao -> expressao DIVIDE expressao .) ]


state 86

    (30) fator -> LBRACKET expressao RBRACKET .

    PLUS            reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    MINUS           reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    TIMES           reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    DIVIDE          reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    GT              reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    LT              reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    GE              reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    LE              reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    EQ              reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    JUNGLE_DIFF     reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    OR              reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    AND             reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    SEMICOLON       reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    RBRACKET        reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)
    :               reduce using rule 30 (fator -> LBRACKET expressao RBRACKET .)


state 87

    (33) repeticao -> FOR LBRACKET declaracao SEMICOLON . condicao SEMICOLON incrementacao RBRACKET : comando
    (37) condicao -> . expressao operador expressao
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    condicao                       shift and go to state 94
    expressao                      shift and go to state 36
    fator                          shift and go to state 37

state 88

    (34) repeticao -> WHILE LBRACKET condicao RBRACKET . : comandos

    :               shift and go to state 95


state 89

    (46) funcao -> FUNCTION ID : comandos RETURN . expressao SEMICOLON
    (23) expressao -> . fator
    (24) expressao -> . expressao PLUS expressao
    (25) expressao -> . expressao MINUS expressao
    (26) expressao -> . expressao TIMES expressao
    (27) expressao -> . expressao DIVIDE expressao
    (28) fator -> . ID
    (29) fator -> . NUMBER
    (30) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 38
    NUMBER          shift and go to state 39
    LBRACKET        shift and go to state 40

    expressao                      shift and go to state 96
    fator                          shift and go to state 37

state 90

    (16) leitura -> READ LBRACKET texto RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 97


state 91

    (19) escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .

    ID              reduce using rule 19 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    WRITE           reduce using rule 19 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    IF              reduce using rule 19 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    FOR             reduce using rule 19 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    WHILE           reduce using rule 19 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    $end            reduce using rule 19 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    RETURN          reduce using rule 19 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    ELSE            reduce using rule 19 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)


state 92

    (22) texto -> QUOTE STRING QUOTE .

    RBRACKET        reduce using rule 22 (texto -> QUOTE STRING QUOTE .)


state 93

    (32) selecao -> IF condicao : comandos ELSE . comandos
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

    comandos                       shift and go to state 98
    comando                        shift and go to state 16
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 94

    (33) repeticao -> FOR LBRACKET declaracao SEMICOLON condicao . SEMICOLON incrementacao RBRACKET : comando

    SEMICOLON       shift and go to state 99


state 95

    (34) repeticao -> WHILE LBRACKET condicao RBRACKET : . comandos
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

    comandos                       shift and go to state 100
    comando                        shift and go to state 16
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 96

    (46) funcao -> FUNCTION ID : comandos RETURN expressao . SEMICOLON
    (24) expressao -> expressao . PLUS expressao
    (25) expressao -> expressao . MINUS expressao
    (26) expressao -> expressao . TIMES expressao
    (27) expressao -> expressao . DIVIDE expressao

    SEMICOLON       shift and go to state 101
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60


state 97

    (16) leitura -> READ LBRACKET texto RBRACKET SEMICOLON .

    ID              reduce using rule 16 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 16 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    WRITE           reduce using rule 16 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    IF              reduce using rule 16 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    FOR             reduce using rule 16 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    WHILE           reduce using rule 16 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 16 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)


state 98

    (32) selecao -> IF condicao : comandos ELSE comandos .
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    $end            reduce using rule 32 (selecao -> IF condicao : comandos ELSE comandos .)
    RETURN          reduce using rule 32 (selecao -> IF condicao : comandos ELSE comandos .)
    ELSE            reduce using rule 32 (selecao -> IF condicao : comandos ELSE comandos .)
    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

  ! ID              [ reduce using rule 32 (selecao -> IF condicao : comandos ELSE comandos .) ]
  ! WRITE           [ reduce using rule 32 (selecao -> IF condicao : comandos ELSE comandos .) ]
  ! IF              [ reduce using rule 32 (selecao -> IF condicao : comandos ELSE comandos .) ]
  ! FOR             [ reduce using rule 32 (selecao -> IF condicao : comandos ELSE comandos .) ]
  ! WHILE           [ reduce using rule 32 (selecao -> IF condicao : comandos ELSE comandos .) ]

    comando                        shift and go to state 33
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 99

    (33) repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON . incrementacao RBRACKET : comando
    (35) incrementacao -> . ID INCREMENT
    (36) incrementacao -> . ID DECREMENT

    ID              shift and go to state 103

    incrementacao                  shift and go to state 102

state 100

    (34) repeticao -> WHILE LBRACKET condicao RBRACKET : comandos .
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    $end            reduce using rule 34 (repeticao -> WHILE LBRACKET condicao RBRACKET : comandos .)
    RETURN          reduce using rule 34 (repeticao -> WHILE LBRACKET condicao RBRACKET : comandos .)
    ELSE            reduce using rule 34 (repeticao -> WHILE LBRACKET condicao RBRACKET : comandos .)
    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

  ! ID              [ reduce using rule 34 (repeticao -> WHILE LBRACKET condicao RBRACKET : comandos .) ]
  ! WRITE           [ reduce using rule 34 (repeticao -> WHILE LBRACKET condicao RBRACKET : comandos .) ]
  ! IF              [ reduce using rule 34 (repeticao -> WHILE LBRACKET condicao RBRACKET : comandos .) ]
  ! FOR             [ reduce using rule 34 (repeticao -> WHILE LBRACKET condicao RBRACKET : comandos .) ]
  ! WHILE           [ reduce using rule 34 (repeticao -> WHILE LBRACKET condicao RBRACKET : comandos .) ]

    comando                        shift and go to state 33
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 101

    (46) funcao -> FUNCTION ID : comandos RETURN expressao SEMICOLON .

    ID              reduce using rule 46 (funcao -> FUNCTION ID : comandos RETURN expressao SEMICOLON .)
    FUNCTION        reduce using rule 46 (funcao -> FUNCTION ID : comandos RETURN expressao SEMICOLON .)
    WRITE           reduce using rule 46 (funcao -> FUNCTION ID : comandos RETURN expressao SEMICOLON .)
    IF              reduce using rule 46 (funcao -> FUNCTION ID : comandos RETURN expressao SEMICOLON .)
    FOR             reduce using rule 46 (funcao -> FUNCTION ID : comandos RETURN expressao SEMICOLON .)
    WHILE           reduce using rule 46 (funcao -> FUNCTION ID : comandos RETURN expressao SEMICOLON .)
    SEMICOLON       reduce using rule 46 (funcao -> FUNCTION ID : comandos RETURN expressao SEMICOLON .)


state 102

    (33) repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao . RBRACKET : comando

    RBRACKET        shift and go to state 104


state 103

    (35) incrementacao -> ID . INCREMENT
    (36) incrementacao -> ID . DECREMENT

    INCREMENT       shift and go to state 105
    DECREMENT       shift and go to state 106


state 104

    (33) repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET . : comando

    :               shift and go to state 107


state 105

    (35) incrementacao -> ID INCREMENT .

    RBRACKET        reduce using rule 35 (incrementacao -> ID INCREMENT .)


state 106

    (36) incrementacao -> ID DECREMENT .

    RBRACKET        reduce using rule 36 (incrementacao -> ID DECREMENT .)


state 107

    (33) repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (17) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (18) atribuicao -> . ID ASSIGN leitura SEMICOLON
    (19) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (31) selecao -> . IF condicao : comandos
    (32) selecao -> . IF condicao : comandos ELSE comandos
    (33) repeticao -> . FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando
    (34) repeticao -> . WHILE LBRACKET condicao RBRACKET : comandos
    (47) call -> . ID LBRACKET RBRACKET SEMICOLON

    ID              shift and go to state 32
    WRITE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25

    comando                        shift and go to state 108
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 108

    (33) repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando .

    ID              reduce using rule 33 (repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando .)
    WRITE           reduce using rule 33 (repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando .)
    IF              reduce using rule 33 (repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando .)
    FOR             reduce using rule 33 (repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando .)
    WHILE           reduce using rule 33 (repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando .)
    $end            reduce using rule 33 (repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando .)
    RETURN          reduce using rule 33 (repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando .)
    ELSE            reduce using rule 33 (repeticao -> FOR LBRACKET declaracao SEMICOLON condicao SEMICOLON incrementacao RBRACKET : comando .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 46 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for ID in state 80 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 98 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 98 resolved as shift
WARNING: shift/reduce conflict for IF in state 98 resolved as shift
WARNING: shift/reduce conflict for FOR in state 98 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 98 resolved as shift
WARNING: shift/reduce conflict for ID in state 100 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 100 resolved as shift
WARNING: shift/reduce conflict for IF in state 100 resolved as shift
WARNING: shift/reduce conflict for FOR in state 100 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 100 resolved as shift
