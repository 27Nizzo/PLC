Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BEGIN
    END
    THEN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> plc
Rule 2     plc -> PLC ID VAR declaracoes comandos
Rule 3     declaracoes -> declaracao
Rule 4     declaracoes -> declaracoes declaracao
Rule 5     declaracao -> ID SEMICOLON
Rule 6     declaracao -> ID ASSIGN NUMBER SEMICOLON
Rule 7     declaracao -> ID ASSIGN leitura
Rule 8     declaracao -> funcao
Rule 9     comandos -> comando
Rule 10    comandos -> comandos comando
Rule 11    comando -> atribuicao
Rule 12    comando -> escrita
Rule 13    comando -> selecao
Rule 14    comando -> repeticao
Rule 15    comando -> call
Rule 16    comando -> incrementacao SEMICOLON
Rule 17    leitura -> READ LBRACKET texto RBRACKET SEMICOLON
Rule 18    atribuicao -> ID ASSIGN expressao SEMICOLON
Rule 19    atribuicao -> ID ASSIGN leitura
Rule 20    escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON
Rule 21    argumento -> texto
Rule 22    argumento -> expressao
Rule 23    texto -> QUOTE STRING QUOTE
Rule 24    expressao -> fator
Rule 25    expressao -> expressao PLUS expressao
Rule 26    expressao -> expressao MINUS expressao
Rule 27    expressao -> expressao TIMES expressao
Rule 28    expressao -> expressao DIVIDE expressao
Rule 29    fator -> ID
Rule 30    fator -> NUMBER
Rule 31    fator -> LBRACKET expressao RBRACKET
Rule 32    selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
Rule 33    selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
Rule 34    repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
Rule 35    repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
Rule 36    incrementacao -> ID INCREMENT
Rule 37    incrementacao -> ID DECREMENT
Rule 38    condicao -> expressao operador expressao
Rule 39    operador -> GT
Rule 40    operador -> LT
Rule 41    operador -> GE
Rule 42    operador -> LE
Rule 43    operador -> EQ
Rule 44    operador -> JUNGLE_DIFF
Rule 45    operador -> OR
Rule 46    operador -> AND
Rule 47    funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON
Rule 48    call -> ID LBRACKET RBRACKET SEMICOLON

Terminals, with rules where they appear

AND                  : 46
ASSIGN               : 6 7 18 19
BEGIN                : 
DECREMENT            : 37
DIVIDE               : 28
ELSE                 : 33
END                  : 
EQ                   : 43
FOR                  : 34
FUNCTION             : 47
GE                   : 41
GT                   : 39
ID                   : 2 5 6 7 18 19 29 36 37 47 48
IF                   : 32 33
INCREMENT            : 36
JUNGLE_DIFF          : 44
LBRACKET             : 17 20 31 32 33 34 35 48
LCBRACKET            : 32 33 33 34 35 47
LE                   : 42
LT                   : 40
MINUS                : 26
NUMBER               : 6 30
OR                   : 45
PLC                  : 2
PLUS                 : 25
QUOTE                : 23 23
RBRACKET             : 17 20 31 32 33 34 35 48
RCBRACKET            : 32 33 33 34 35 47
READ                 : 17
RETURN               : 47
SEMICOLON            : 5 6 16 17 18 20 34 47 48
STRING               : 23
THEN                 : 
TIMES                : 27
VAR                  : 2
WHILE                : 35
WRITE                : 20
error                : 

Nonterminals, with rules where they appear

argumento            : 20
atribuicao           : 11
call                 : 15
comando              : 9 10
comandos             : 2 10 32 33 33 34 35 47
condicao             : 32 33 34 35
declaracao           : 3 4 34
declaracoes          : 2 4
escrita              : 12
expressao            : 18 22 25 25 26 26 27 27 28 28 31 38 38 47
fator                : 24
funcao               : 8
incrementacao        : 16 34
leitura              : 7 19
operador             : 38
plc                  : 1
programa             : 0
repeticao            : 14
selecao              : 13
texto                : 17 21

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . plc
    (2) plc -> . PLC ID VAR declaracoes comandos

    PLC             shift and go to state 3

    programa                       shift and go to state 1
    plc                            shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> plc .

    $end            reduce using rule 1 (programa -> plc .)


state 3

    (2) plc -> PLC . ID VAR declaracoes comandos

    ID              shift and go to state 4


state 4

    (2) plc -> PLC ID . VAR declaracoes comandos

    VAR             shift and go to state 5


state 5

    (2) plc -> PLC ID VAR . declaracoes comandos
    (3) declaracoes -> . declaracao
    (4) declaracoes -> . declaracoes declaracao
    (5) declaracao -> . ID SEMICOLON
    (6) declaracao -> . ID ASSIGN NUMBER SEMICOLON
    (7) declaracao -> . ID ASSIGN leitura
    (8) declaracao -> . funcao
    (47) funcao -> . FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON

    ID              shift and go to state 6
    FUNCTION        shift and go to state 10

    declaracoes                    shift and go to state 7
    declaracao                     shift and go to state 8
    funcao                         shift and go to state 9

state 6

    (5) declaracao -> ID . SEMICOLON
    (6) declaracao -> ID . ASSIGN NUMBER SEMICOLON
    (7) declaracao -> ID . ASSIGN leitura

    SEMICOLON       shift and go to state 11
    ASSIGN          shift and go to state 12


state 7

    (2) plc -> PLC ID VAR declaracoes . comandos
    (4) declaracoes -> declaracoes . declaracao
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (5) declaracao -> . ID SEMICOLON
    (6) declaracao -> . ID ASSIGN NUMBER SEMICOLON
    (7) declaracao -> . ID ASSIGN leitura
    (8) declaracao -> . funcao
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (47) funcao -> . FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    ID              shift and go to state 13
    FUNCTION        shift and go to state 10
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comandos                       shift and go to state 14
    declaracao                     shift and go to state 15
    comando                        shift and go to state 16
    funcao                         shift and go to state 9
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 8

    (3) declaracoes -> declaracao .

    ID              reduce using rule 3 (declaracoes -> declaracao .)
    FUNCTION        reduce using rule 3 (declaracoes -> declaracao .)
    WRITE           reduce using rule 3 (declaracoes -> declaracao .)
    IF              reduce using rule 3 (declaracoes -> declaracao .)
    FOR             reduce using rule 3 (declaracoes -> declaracao .)
    WHILE           reduce using rule 3 (declaracoes -> declaracao .)


state 9

    (8) declaracao -> funcao .

    ID              reduce using rule 8 (declaracao -> funcao .)
    FUNCTION        reduce using rule 8 (declaracao -> funcao .)
    WRITE           reduce using rule 8 (declaracao -> funcao .)
    IF              reduce using rule 8 (declaracao -> funcao .)
    FOR             reduce using rule 8 (declaracao -> funcao .)
    WHILE           reduce using rule 8 (declaracao -> funcao .)
    NUMBER          reduce using rule 8 (declaracao -> funcao .)
    LBRACKET        reduce using rule 8 (declaracao -> funcao .)


state 10

    (47) funcao -> FUNCTION . ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON

    ID              shift and go to state 27


state 11

    (5) declaracao -> ID SEMICOLON .

    ID              reduce using rule 5 (declaracao -> ID SEMICOLON .)
    FUNCTION        reduce using rule 5 (declaracao -> ID SEMICOLON .)
    WRITE           reduce using rule 5 (declaracao -> ID SEMICOLON .)
    IF              reduce using rule 5 (declaracao -> ID SEMICOLON .)
    FOR             reduce using rule 5 (declaracao -> ID SEMICOLON .)
    WHILE           reduce using rule 5 (declaracao -> ID SEMICOLON .)
    NUMBER          reduce using rule 5 (declaracao -> ID SEMICOLON .)
    LBRACKET        reduce using rule 5 (declaracao -> ID SEMICOLON .)


state 12

    (6) declaracao -> ID ASSIGN . NUMBER SEMICOLON
    (7) declaracao -> ID ASSIGN . leitura
    (17) leitura -> . READ LBRACKET texto RBRACKET SEMICOLON

    NUMBER          shift and go to state 28
    READ            shift and go to state 30

    leitura                        shift and go to state 29

state 13

    (5) declaracao -> ID . SEMICOLON
    (6) declaracao -> ID . ASSIGN NUMBER SEMICOLON
    (7) declaracao -> ID . ASSIGN leitura
    (18) atribuicao -> ID . ASSIGN expressao SEMICOLON
    (19) atribuicao -> ID . ASSIGN leitura
    (48) call -> ID . LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> ID . INCREMENT
    (37) incrementacao -> ID . DECREMENT

    SEMICOLON       shift and go to state 11
    ASSIGN          shift and go to state 31
    LBRACKET        shift and go to state 32
    INCREMENT       shift and go to state 33
    DECREMENT       shift and go to state 34


state 14

    (2) plc -> PLC ID VAR declaracoes comandos .
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    $end            reduce using rule 2 (plc -> PLC ID VAR declaracoes comandos .)
    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comando                        shift and go to state 36
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 15

    (4) declaracoes -> declaracoes declaracao .

    ID              reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    FUNCTION        reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    WRITE           reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    IF              reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    FOR             reduce using rule 4 (declaracoes -> declaracoes declaracao .)
    WHILE           reduce using rule 4 (declaracoes -> declaracoes declaracao .)


state 16

    (9) comandos -> comando .

    ID              reduce using rule 9 (comandos -> comando .)
    WRITE           reduce using rule 9 (comandos -> comando .)
    IF              reduce using rule 9 (comandos -> comando .)
    FOR             reduce using rule 9 (comandos -> comando .)
    WHILE           reduce using rule 9 (comandos -> comando .)
    $end            reduce using rule 9 (comandos -> comando .)
    RETURN          reduce using rule 9 (comandos -> comando .)
    RCBRACKET       reduce using rule 9 (comandos -> comando .)


state 17

    (11) comando -> atribuicao .

    ID              reduce using rule 11 (comando -> atribuicao .)
    WRITE           reduce using rule 11 (comando -> atribuicao .)
    IF              reduce using rule 11 (comando -> atribuicao .)
    FOR             reduce using rule 11 (comando -> atribuicao .)
    WHILE           reduce using rule 11 (comando -> atribuicao .)
    $end            reduce using rule 11 (comando -> atribuicao .)
    RETURN          reduce using rule 11 (comando -> atribuicao .)
    RCBRACKET       reduce using rule 11 (comando -> atribuicao .)


state 18

    (12) comando -> escrita .

    ID              reduce using rule 12 (comando -> escrita .)
    WRITE           reduce using rule 12 (comando -> escrita .)
    IF              reduce using rule 12 (comando -> escrita .)
    FOR             reduce using rule 12 (comando -> escrita .)
    WHILE           reduce using rule 12 (comando -> escrita .)
    $end            reduce using rule 12 (comando -> escrita .)
    RETURN          reduce using rule 12 (comando -> escrita .)
    RCBRACKET       reduce using rule 12 (comando -> escrita .)


state 19

    (13) comando -> selecao .

    ID              reduce using rule 13 (comando -> selecao .)
    WRITE           reduce using rule 13 (comando -> selecao .)
    IF              reduce using rule 13 (comando -> selecao .)
    FOR             reduce using rule 13 (comando -> selecao .)
    WHILE           reduce using rule 13 (comando -> selecao .)
    $end            reduce using rule 13 (comando -> selecao .)
    RETURN          reduce using rule 13 (comando -> selecao .)
    RCBRACKET       reduce using rule 13 (comando -> selecao .)


state 20

    (14) comando -> repeticao .

    ID              reduce using rule 14 (comando -> repeticao .)
    WRITE           reduce using rule 14 (comando -> repeticao .)
    IF              reduce using rule 14 (comando -> repeticao .)
    FOR             reduce using rule 14 (comando -> repeticao .)
    WHILE           reduce using rule 14 (comando -> repeticao .)
    $end            reduce using rule 14 (comando -> repeticao .)
    RETURN          reduce using rule 14 (comando -> repeticao .)
    RCBRACKET       reduce using rule 14 (comando -> repeticao .)


state 21

    (15) comando -> call .

    ID              reduce using rule 15 (comando -> call .)
    WRITE           reduce using rule 15 (comando -> call .)
    IF              reduce using rule 15 (comando -> call .)
    FOR             reduce using rule 15 (comando -> call .)
    WHILE           reduce using rule 15 (comando -> call .)
    $end            reduce using rule 15 (comando -> call .)
    RETURN          reduce using rule 15 (comando -> call .)
    RCBRACKET       reduce using rule 15 (comando -> call .)


state 22

    (16) comando -> incrementacao . SEMICOLON

    SEMICOLON       shift and go to state 37


state 23

    (20) escrita -> WRITE . LBRACKET argumento RBRACKET SEMICOLON

    LBRACKET        shift and go to state 38


state 24

    (32) selecao -> IF . LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> IF . LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET

    LBRACKET        shift and go to state 39


state 25

    (34) repeticao -> FOR . LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET

    LBRACKET        shift and go to state 40


state 26

    (35) repeticao -> WHILE . LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET

    LBRACKET        shift and go to state 41


state 27

    (47) funcao -> FUNCTION ID . LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON

    LCBRACKET       shift and go to state 42


state 28

    (6) declaracao -> ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 43


state 29

    (7) declaracao -> ID ASSIGN leitura .

    ID              reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    FUNCTION        reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    WRITE           reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    IF              reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    FOR             reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    WHILE           reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    NUMBER          reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    LBRACKET        reduce using rule 7 (declaracao -> ID ASSIGN leitura .)


state 30

    (17) leitura -> READ . LBRACKET texto RBRACKET SEMICOLON

    LBRACKET        shift and go to state 44


state 31

    (6) declaracao -> ID ASSIGN . NUMBER SEMICOLON
    (7) declaracao -> ID ASSIGN . leitura
    (18) atribuicao -> ID ASSIGN . expressao SEMICOLON
    (19) atribuicao -> ID ASSIGN . leitura
    (17) leitura -> . READ LBRACKET texto RBRACKET SEMICOLON
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    NUMBER          shift and go to state 46
    READ            shift and go to state 30
    ID              shift and go to state 45
    LBRACKET        shift and go to state 49

    leitura                        shift and go to state 47
    expressao                      shift and go to state 48
    fator                          shift and go to state 50

state 32

    (48) call -> ID LBRACKET . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 51


state 33

    (36) incrementacao -> ID INCREMENT .

    SEMICOLON       reduce using rule 36 (incrementacao -> ID INCREMENT .)
    RBRACKET        reduce using rule 36 (incrementacao -> ID INCREMENT .)


state 34

    (37) incrementacao -> ID DECREMENT .

    SEMICOLON       reduce using rule 37 (incrementacao -> ID DECREMENT .)
    RBRACKET        reduce using rule 37 (incrementacao -> ID DECREMENT .)


state 35

    (18) atribuicao -> ID . ASSIGN expressao SEMICOLON
    (19) atribuicao -> ID . ASSIGN leitura
    (48) call -> ID . LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> ID . INCREMENT
    (37) incrementacao -> ID . DECREMENT

    ASSIGN          shift and go to state 52
    LBRACKET        shift and go to state 32
    INCREMENT       shift and go to state 33
    DECREMENT       shift and go to state 34


state 36

    (10) comandos -> comandos comando .

    ID              reduce using rule 10 (comandos -> comandos comando .)
    WRITE           reduce using rule 10 (comandos -> comandos comando .)
    IF              reduce using rule 10 (comandos -> comandos comando .)
    FOR             reduce using rule 10 (comandos -> comandos comando .)
    WHILE           reduce using rule 10 (comandos -> comandos comando .)
    $end            reduce using rule 10 (comandos -> comandos comando .)
    RETURN          reduce using rule 10 (comandos -> comandos comando .)
    RCBRACKET       reduce using rule 10 (comandos -> comandos comando .)


state 37

    (16) comando -> incrementacao SEMICOLON .

    ID              reduce using rule 16 (comando -> incrementacao SEMICOLON .)
    WRITE           reduce using rule 16 (comando -> incrementacao SEMICOLON .)
    IF              reduce using rule 16 (comando -> incrementacao SEMICOLON .)
    FOR             reduce using rule 16 (comando -> incrementacao SEMICOLON .)
    WHILE           reduce using rule 16 (comando -> incrementacao SEMICOLON .)
    $end            reduce using rule 16 (comando -> incrementacao SEMICOLON .)
    RETURN          reduce using rule 16 (comando -> incrementacao SEMICOLON .)
    RCBRACKET       reduce using rule 16 (comando -> incrementacao SEMICOLON .)


state 38

    (20) escrita -> WRITE LBRACKET . argumento RBRACKET SEMICOLON
    (21) argumento -> . texto
    (22) argumento -> . expressao
    (23) texto -> . QUOTE STRING QUOTE
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    QUOTE           shift and go to state 56
    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    argumento                      shift and go to state 53
    texto                          shift and go to state 54
    expressao                      shift and go to state 55
    fator                          shift and go to state 50

state 39

    (32) selecao -> IF LBRACKET . condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> IF LBRACKET . condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (38) condicao -> . expressao operador expressao
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    condicao                       shift and go to state 58
    expressao                      shift and go to state 59
    fator                          shift and go to state 50

state 40

    (34) repeticao -> FOR LBRACKET . declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (5) declaracao -> . ID SEMICOLON
    (6) declaracao -> . ID ASSIGN NUMBER SEMICOLON
    (7) declaracao -> . ID ASSIGN leitura
    (8) declaracao -> . funcao
    (47) funcao -> . FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON

    ID              shift and go to state 6
    FUNCTION        shift and go to state 10

    declaracao                     shift and go to state 60
    funcao                         shift and go to state 9

state 41

    (35) repeticao -> WHILE LBRACKET . condicao RBRACKET LCBRACKET comandos RCBRACKET
    (38) condicao -> . expressao operador expressao
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    condicao                       shift and go to state 61
    expressao                      shift and go to state 59
    fator                          shift and go to state 50

state 42

    (47) funcao -> FUNCTION ID LCBRACKET . comandos RETURN expressao RCBRACKET SEMICOLON
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comandos                       shift and go to state 62
    comando                        shift and go to state 16
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 43

    (6) declaracao -> ID ASSIGN NUMBER SEMICOLON .

    ID              reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    FUNCTION        reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    WRITE           reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    IF              reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    FOR             reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    WHILE           reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    NUMBER          reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)
    LBRACKET        reduce using rule 6 (declaracao -> ID ASSIGN NUMBER SEMICOLON .)


state 44

    (17) leitura -> READ LBRACKET . texto RBRACKET SEMICOLON
    (23) texto -> . QUOTE STRING QUOTE

    QUOTE           shift and go to state 56

    texto                          shift and go to state 63

state 45

    (29) fator -> ID .

    SEMICOLON       reduce using rule 29 (fator -> ID .)
    PLUS            reduce using rule 29 (fator -> ID .)
    MINUS           reduce using rule 29 (fator -> ID .)
    TIMES           reduce using rule 29 (fator -> ID .)
    DIVIDE          reduce using rule 29 (fator -> ID .)
    RBRACKET        reduce using rule 29 (fator -> ID .)
    GT              reduce using rule 29 (fator -> ID .)
    LT              reduce using rule 29 (fator -> ID .)
    GE              reduce using rule 29 (fator -> ID .)
    LE              reduce using rule 29 (fator -> ID .)
    EQ              reduce using rule 29 (fator -> ID .)
    JUNGLE_DIFF     reduce using rule 29 (fator -> ID .)
    OR              reduce using rule 29 (fator -> ID .)
    AND             reduce using rule 29 (fator -> ID .)
    RCBRACKET       reduce using rule 29 (fator -> ID .)


state 46

    (6) declaracao -> ID ASSIGN NUMBER . SEMICOLON
    (30) fator -> NUMBER .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 43
    PLUS            reduce using rule 30 (fator -> NUMBER .)
    MINUS           reduce using rule 30 (fator -> NUMBER .)
    TIMES           reduce using rule 30 (fator -> NUMBER .)
    DIVIDE          reduce using rule 30 (fator -> NUMBER .)

  ! SEMICOLON       [ reduce using rule 30 (fator -> NUMBER .) ]


state 47

    (7) declaracao -> ID ASSIGN leitura .
    (19) atribuicao -> ID ASSIGN leitura .

  ! reduce/reduce conflict for ID resolved using rule 7 (declaracao -> ID ASSIGN leitura .)
  ! reduce/reduce conflict for WRITE resolved using rule 7 (declaracao -> ID ASSIGN leitura .)
  ! reduce/reduce conflict for IF resolved using rule 7 (declaracao -> ID ASSIGN leitura .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (declaracao -> ID ASSIGN leitura .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (declaracao -> ID ASSIGN leitura .)
    ID              reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    FUNCTION        reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    WRITE           reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    IF              reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    FOR             reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    WHILE           reduce using rule 7 (declaracao -> ID ASSIGN leitura .)
    $end            reduce using rule 19 (atribuicao -> ID ASSIGN leitura .)

  ! ID              [ reduce using rule 19 (atribuicao -> ID ASSIGN leitura .) ]
  ! WRITE           [ reduce using rule 19 (atribuicao -> ID ASSIGN leitura .) ]
  ! IF              [ reduce using rule 19 (atribuicao -> ID ASSIGN leitura .) ]
  ! FOR             [ reduce using rule 19 (atribuicao -> ID ASSIGN leitura .) ]
  ! WHILE           [ reduce using rule 19 (atribuicao -> ID ASSIGN leitura .) ]


state 48

    (18) atribuicao -> ID ASSIGN expressao . SEMICOLON
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao

    SEMICOLON       shift and go to state 64
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68


state 49

    (31) fator -> LBRACKET . expressao RBRACKET
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    expressao                      shift and go to state 69
    fator                          shift and go to state 50

state 50

    (24) expressao -> fator .

    SEMICOLON       reduce using rule 24 (expressao -> fator .)
    PLUS            reduce using rule 24 (expressao -> fator .)
    MINUS           reduce using rule 24 (expressao -> fator .)
    TIMES           reduce using rule 24 (expressao -> fator .)
    DIVIDE          reduce using rule 24 (expressao -> fator .)
    RBRACKET        reduce using rule 24 (expressao -> fator .)
    GT              reduce using rule 24 (expressao -> fator .)
    LT              reduce using rule 24 (expressao -> fator .)
    GE              reduce using rule 24 (expressao -> fator .)
    LE              reduce using rule 24 (expressao -> fator .)
    EQ              reduce using rule 24 (expressao -> fator .)
    JUNGLE_DIFF     reduce using rule 24 (expressao -> fator .)
    OR              reduce using rule 24 (expressao -> fator .)
    AND             reduce using rule 24 (expressao -> fator .)
    RCBRACKET       reduce using rule 24 (expressao -> fator .)


state 51

    (48) call -> ID LBRACKET RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 70


state 52

    (18) atribuicao -> ID ASSIGN . expressao SEMICOLON
    (19) atribuicao -> ID ASSIGN . leitura
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (17) leitura -> . READ LBRACKET texto RBRACKET SEMICOLON
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    READ            shift and go to state 30
    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    expressao                      shift and go to state 48
    leitura                        shift and go to state 71
    fator                          shift and go to state 50

state 53

    (20) escrita -> WRITE LBRACKET argumento . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 72


state 54

    (21) argumento -> texto .

    RBRACKET        reduce using rule 21 (argumento -> texto .)


state 55

    (22) argumento -> expressao .
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao

    RBRACKET        reduce using rule 22 (argumento -> expressao .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68


state 56

    (23) texto -> QUOTE . STRING QUOTE

    STRING          shift and go to state 73


state 57

    (30) fator -> NUMBER .

    PLUS            reduce using rule 30 (fator -> NUMBER .)
    MINUS           reduce using rule 30 (fator -> NUMBER .)
    TIMES           reduce using rule 30 (fator -> NUMBER .)
    DIVIDE          reduce using rule 30 (fator -> NUMBER .)
    RBRACKET        reduce using rule 30 (fator -> NUMBER .)
    GT              reduce using rule 30 (fator -> NUMBER .)
    LT              reduce using rule 30 (fator -> NUMBER .)
    GE              reduce using rule 30 (fator -> NUMBER .)
    LE              reduce using rule 30 (fator -> NUMBER .)
    EQ              reduce using rule 30 (fator -> NUMBER .)
    JUNGLE_DIFF     reduce using rule 30 (fator -> NUMBER .)
    OR              reduce using rule 30 (fator -> NUMBER .)
    AND             reduce using rule 30 (fator -> NUMBER .)
    SEMICOLON       reduce using rule 30 (fator -> NUMBER .)
    RCBRACKET       reduce using rule 30 (fator -> NUMBER .)


state 58

    (32) selecao -> IF LBRACKET condicao . RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> IF LBRACKET condicao . RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET

    RBRACKET        shift and go to state 74


state 59

    (38) condicao -> expressao . operador expressao
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao
    (39) operador -> . GT
    (40) operador -> . LT
    (41) operador -> . GE
    (42) operador -> . LE
    (43) operador -> . EQ
    (44) operador -> . JUNGLE_DIFF
    (45) operador -> . OR
    (46) operador -> . AND

    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    GT              shift and go to state 76
    LT              shift and go to state 77
    GE              shift and go to state 78
    LE              shift and go to state 79
    EQ              shift and go to state 80
    JUNGLE_DIFF     shift and go to state 81
    OR              shift and go to state 82
    AND             shift and go to state 83

    operador                       shift and go to state 75

state 60

    (34) repeticao -> FOR LBRACKET declaracao . condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (38) condicao -> . expressao operador expressao
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    condicao                       shift and go to state 84
    expressao                      shift and go to state 59
    fator                          shift and go to state 50

state 61

    (35) repeticao -> WHILE LBRACKET condicao . RBRACKET LCBRACKET comandos RCBRACKET

    RBRACKET        shift and go to state 85


state 62

    (47) funcao -> FUNCTION ID LCBRACKET comandos . RETURN expressao RCBRACKET SEMICOLON
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    RETURN          shift and go to state 86
    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comando                        shift and go to state 36
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 63

    (17) leitura -> READ LBRACKET texto . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 87


state 64

    (18) atribuicao -> ID ASSIGN expressao SEMICOLON .

    ID              reduce using rule 18 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    WRITE           reduce using rule 18 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    IF              reduce using rule 18 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    FOR             reduce using rule 18 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    WHILE           reduce using rule 18 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    $end            reduce using rule 18 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    RETURN          reduce using rule 18 (atribuicao -> ID ASSIGN expressao SEMICOLON .)
    RCBRACKET       reduce using rule 18 (atribuicao -> ID ASSIGN expressao SEMICOLON .)


state 65

    (25) expressao -> expressao PLUS . expressao
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    expressao                      shift and go to state 88
    fator                          shift and go to state 50

state 66

    (26) expressao -> expressao MINUS . expressao
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    expressao                      shift and go to state 89
    fator                          shift and go to state 50

state 67

    (27) expressao -> expressao TIMES . expressao
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    expressao                      shift and go to state 90
    fator                          shift and go to state 50

state 68

    (28) expressao -> expressao DIVIDE . expressao
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    expressao                      shift and go to state 91
    fator                          shift and go to state 50

state 69

    (31) fator -> LBRACKET expressao . RBRACKET
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao

    RBRACKET        shift and go to state 92
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68


state 70

    (48) call -> ID LBRACKET RBRACKET SEMICOLON .

    ID              reduce using rule 48 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    WRITE           reduce using rule 48 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    IF              reduce using rule 48 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    FOR             reduce using rule 48 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    WHILE           reduce using rule 48 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 48 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    RETURN          reduce using rule 48 (call -> ID LBRACKET RBRACKET SEMICOLON .)
    RCBRACKET       reduce using rule 48 (call -> ID LBRACKET RBRACKET SEMICOLON .)


state 71

    (19) atribuicao -> ID ASSIGN leitura .

    ID              reduce using rule 19 (atribuicao -> ID ASSIGN leitura .)
    WRITE           reduce using rule 19 (atribuicao -> ID ASSIGN leitura .)
    IF              reduce using rule 19 (atribuicao -> ID ASSIGN leitura .)
    FOR             reduce using rule 19 (atribuicao -> ID ASSIGN leitura .)
    WHILE           reduce using rule 19 (atribuicao -> ID ASSIGN leitura .)
    $end            reduce using rule 19 (atribuicao -> ID ASSIGN leitura .)
    RETURN          reduce using rule 19 (atribuicao -> ID ASSIGN leitura .)
    RCBRACKET       reduce using rule 19 (atribuicao -> ID ASSIGN leitura .)


state 72

    (20) escrita -> WRITE LBRACKET argumento RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 93


state 73

    (23) texto -> QUOTE STRING . QUOTE

    QUOTE           shift and go to state 94


state 74

    (32) selecao -> IF LBRACKET condicao RBRACKET . LCBRACKET comandos RCBRACKET
    (33) selecao -> IF LBRACKET condicao RBRACKET . LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET

    LCBRACKET       shift and go to state 95


state 75

    (38) condicao -> expressao operador . expressao
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    expressao                      shift and go to state 96
    fator                          shift and go to state 50

state 76

    (39) operador -> GT .

    ID              reduce using rule 39 (operador -> GT .)
    NUMBER          reduce using rule 39 (operador -> GT .)
    LBRACKET        reduce using rule 39 (operador -> GT .)


state 77

    (40) operador -> LT .

    ID              reduce using rule 40 (operador -> LT .)
    NUMBER          reduce using rule 40 (operador -> LT .)
    LBRACKET        reduce using rule 40 (operador -> LT .)


state 78

    (41) operador -> GE .

    ID              reduce using rule 41 (operador -> GE .)
    NUMBER          reduce using rule 41 (operador -> GE .)
    LBRACKET        reduce using rule 41 (operador -> GE .)


state 79

    (42) operador -> LE .

    ID              reduce using rule 42 (operador -> LE .)
    NUMBER          reduce using rule 42 (operador -> LE .)
    LBRACKET        reduce using rule 42 (operador -> LE .)


state 80

    (43) operador -> EQ .

    ID              reduce using rule 43 (operador -> EQ .)
    NUMBER          reduce using rule 43 (operador -> EQ .)
    LBRACKET        reduce using rule 43 (operador -> EQ .)


state 81

    (44) operador -> JUNGLE_DIFF .

    ID              reduce using rule 44 (operador -> JUNGLE_DIFF .)
    NUMBER          reduce using rule 44 (operador -> JUNGLE_DIFF .)
    LBRACKET        reduce using rule 44 (operador -> JUNGLE_DIFF .)


state 82

    (45) operador -> OR .

    ID              reduce using rule 45 (operador -> OR .)
    NUMBER          reduce using rule 45 (operador -> OR .)
    LBRACKET        reduce using rule 45 (operador -> OR .)


state 83

    (46) operador -> AND .

    ID              reduce using rule 46 (operador -> AND .)
    NUMBER          reduce using rule 46 (operador -> AND .)
    LBRACKET        reduce using rule 46 (operador -> AND .)


state 84

    (34) repeticao -> FOR LBRACKET declaracao condicao . SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET

    SEMICOLON       shift and go to state 97


state 85

    (35) repeticao -> WHILE LBRACKET condicao RBRACKET . LCBRACKET comandos RCBRACKET

    LCBRACKET       shift and go to state 98


state 86

    (47) funcao -> FUNCTION ID LCBRACKET comandos RETURN . expressao RCBRACKET SEMICOLON
    (24) expressao -> . fator
    (25) expressao -> . expressao PLUS expressao
    (26) expressao -> . expressao MINUS expressao
    (27) expressao -> . expressao TIMES expressao
    (28) expressao -> . expressao DIVIDE expressao
    (29) fator -> . ID
    (30) fator -> . NUMBER
    (31) fator -> . LBRACKET expressao RBRACKET

    ID              shift and go to state 45
    NUMBER          shift and go to state 57
    LBRACKET        shift and go to state 49

    expressao                      shift and go to state 99
    fator                          shift and go to state 50

state 87

    (17) leitura -> READ LBRACKET texto RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 100


state 88

    (25) expressao -> expressao PLUS expressao .
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao

    SEMICOLON       reduce using rule 25 (expressao -> expressao PLUS expressao .)
    PLUS            reduce using rule 25 (expressao -> expressao PLUS expressao .)
    MINUS           reduce using rule 25 (expressao -> expressao PLUS expressao .)
    RBRACKET        reduce using rule 25 (expressao -> expressao PLUS expressao .)
    GT              reduce using rule 25 (expressao -> expressao PLUS expressao .)
    LT              reduce using rule 25 (expressao -> expressao PLUS expressao .)
    GE              reduce using rule 25 (expressao -> expressao PLUS expressao .)
    LE              reduce using rule 25 (expressao -> expressao PLUS expressao .)
    EQ              reduce using rule 25 (expressao -> expressao PLUS expressao .)
    JUNGLE_DIFF     reduce using rule 25 (expressao -> expressao PLUS expressao .)
    OR              reduce using rule 25 (expressao -> expressao PLUS expressao .)
    AND             reduce using rule 25 (expressao -> expressao PLUS expressao .)
    RCBRACKET       reduce using rule 25 (expressao -> expressao PLUS expressao .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68

  ! TIMES           [ reduce using rule 25 (expressao -> expressao PLUS expressao .) ]
  ! DIVIDE          [ reduce using rule 25 (expressao -> expressao PLUS expressao .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]


state 89

    (26) expressao -> expressao MINUS expressao .
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao

    SEMICOLON       reduce using rule 26 (expressao -> expressao MINUS expressao .)
    PLUS            reduce using rule 26 (expressao -> expressao MINUS expressao .)
    MINUS           reduce using rule 26 (expressao -> expressao MINUS expressao .)
    RBRACKET        reduce using rule 26 (expressao -> expressao MINUS expressao .)
    GT              reduce using rule 26 (expressao -> expressao MINUS expressao .)
    LT              reduce using rule 26 (expressao -> expressao MINUS expressao .)
    GE              reduce using rule 26 (expressao -> expressao MINUS expressao .)
    LE              reduce using rule 26 (expressao -> expressao MINUS expressao .)
    EQ              reduce using rule 26 (expressao -> expressao MINUS expressao .)
    JUNGLE_DIFF     reduce using rule 26 (expressao -> expressao MINUS expressao .)
    OR              reduce using rule 26 (expressao -> expressao MINUS expressao .)
    AND             reduce using rule 26 (expressao -> expressao MINUS expressao .)
    RCBRACKET       reduce using rule 26 (expressao -> expressao MINUS expressao .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68

  ! TIMES           [ reduce using rule 26 (expressao -> expressao MINUS expressao .) ]
  ! DIVIDE          [ reduce using rule 26 (expressao -> expressao MINUS expressao .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]


state 90

    (27) expressao -> expressao TIMES expressao .
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao

    SEMICOLON       reduce using rule 27 (expressao -> expressao TIMES expressao .)
    PLUS            reduce using rule 27 (expressao -> expressao TIMES expressao .)
    MINUS           reduce using rule 27 (expressao -> expressao TIMES expressao .)
    TIMES           reduce using rule 27 (expressao -> expressao TIMES expressao .)
    DIVIDE          reduce using rule 27 (expressao -> expressao TIMES expressao .)
    RBRACKET        reduce using rule 27 (expressao -> expressao TIMES expressao .)
    GT              reduce using rule 27 (expressao -> expressao TIMES expressao .)
    LT              reduce using rule 27 (expressao -> expressao TIMES expressao .)
    GE              reduce using rule 27 (expressao -> expressao TIMES expressao .)
    LE              reduce using rule 27 (expressao -> expressao TIMES expressao .)
    EQ              reduce using rule 27 (expressao -> expressao TIMES expressao .)
    JUNGLE_DIFF     reduce using rule 27 (expressao -> expressao TIMES expressao .)
    OR              reduce using rule 27 (expressao -> expressao TIMES expressao .)
    AND             reduce using rule 27 (expressao -> expressao TIMES expressao .)
    RCBRACKET       reduce using rule 27 (expressao -> expressao TIMES expressao .)

  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]


state 91

    (28) expressao -> expressao DIVIDE expressao .
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao

    SEMICOLON       reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    PLUS            reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    MINUS           reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    TIMES           reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    DIVIDE          reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    RBRACKET        reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    GT              reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    LT              reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    GE              reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    LE              reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    EQ              reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    JUNGLE_DIFF     reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    OR              reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    AND             reduce using rule 28 (expressao -> expressao DIVIDE expressao .)
    RCBRACKET       reduce using rule 28 (expressao -> expressao DIVIDE expressao .)

  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]


state 92

    (31) fator -> LBRACKET expressao RBRACKET .

    SEMICOLON       reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    PLUS            reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    MINUS           reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    TIMES           reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    DIVIDE          reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    RBRACKET        reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    GT              reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    LT              reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    GE              reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    LE              reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    EQ              reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    JUNGLE_DIFF     reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    OR              reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    AND             reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)
    RCBRACKET       reduce using rule 31 (fator -> LBRACKET expressao RBRACKET .)


state 93

    (20) escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .

    ID              reduce using rule 20 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    WRITE           reduce using rule 20 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    IF              reduce using rule 20 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    FOR             reduce using rule 20 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    WHILE           reduce using rule 20 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    $end            reduce using rule 20 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    RETURN          reduce using rule 20 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)
    RCBRACKET       reduce using rule 20 (escrita -> WRITE LBRACKET argumento RBRACKET SEMICOLON .)


state 94

    (23) texto -> QUOTE STRING QUOTE .

    RBRACKET        reduce using rule 23 (texto -> QUOTE STRING QUOTE .)


state 95

    (32) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET . comandos RCBRACKET
    (33) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET . comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comandos                       shift and go to state 101
    comando                        shift and go to state 16
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 96

    (38) condicao -> expressao operador expressao .
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao

    RBRACKET        reduce using rule 38 (condicao -> expressao operador expressao .)
    SEMICOLON       reduce using rule 38 (condicao -> expressao operador expressao .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68


state 97

    (34) repeticao -> FOR LBRACKET declaracao condicao SEMICOLON . incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    ID              shift and go to state 103

    incrementacao                  shift and go to state 102

state 98

    (35) repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET . comandos RCBRACKET
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comandos                       shift and go to state 104
    comando                        shift and go to state 16
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 99

    (47) funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao . RCBRACKET SEMICOLON
    (25) expressao -> expressao . PLUS expressao
    (26) expressao -> expressao . MINUS expressao
    (27) expressao -> expressao . TIMES expressao
    (28) expressao -> expressao . DIVIDE expressao

    RCBRACKET       shift and go to state 105
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68


state 100

    (17) leitura -> READ LBRACKET texto RBRACKET SEMICOLON .

    ID              reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    WRITE           reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    IF              reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    FOR             reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    WHILE           reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    $end            reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    RETURN          reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)
    RCBRACKET       reduce using rule 17 (leitura -> READ LBRACKET texto RBRACKET SEMICOLON .)


state 101

    (32) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos . RCBRACKET
    (33) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos . RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    RCBRACKET       shift and go to state 106
    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comando                        shift and go to state 36
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 102

    (34) repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao . RBRACKET LCBRACKET comandos RCBRACKET

    RBRACKET        shift and go to state 107


state 103

    (36) incrementacao -> ID . INCREMENT
    (37) incrementacao -> ID . DECREMENT

    INCREMENT       shift and go to state 33
    DECREMENT       shift and go to state 34


state 104

    (35) repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos . RCBRACKET
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    RCBRACKET       shift and go to state 108
    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comando                        shift and go to state 36
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 105

    (47) funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 109


state 106

    (32) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .
    (33) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET . ELSE LCBRACKET comandos RCBRACKET

    ID              reduce using rule 32 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    WRITE           reduce using rule 32 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    IF              reduce using rule 32 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    FOR             reduce using rule 32 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    WHILE           reduce using rule 32 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    $end            reduce using rule 32 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    RETURN          reduce using rule 32 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    RCBRACKET       reduce using rule 32 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    ELSE            shift and go to state 110


state 107

    (34) repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET . LCBRACKET comandos RCBRACKET

    LCBRACKET       shift and go to state 111


state 108

    (35) repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .

    ID              reduce using rule 35 (repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    WRITE           reduce using rule 35 (repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    IF              reduce using rule 35 (repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    FOR             reduce using rule 35 (repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    WHILE           reduce using rule 35 (repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    $end            reduce using rule 35 (repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    RETURN          reduce using rule 35 (repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)
    RCBRACKET       reduce using rule 35 (repeticao -> WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET .)


state 109

    (47) funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON .

    ID              reduce using rule 47 (funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 47 (funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON .)
    WRITE           reduce using rule 47 (funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON .)
    IF              reduce using rule 47 (funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON .)
    FOR             reduce using rule 47 (funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON .)
    WHILE           reduce using rule 47 (funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON .)
    NUMBER          reduce using rule 47 (funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 47 (funcao -> FUNCTION ID LCBRACKET comandos RETURN expressao RCBRACKET SEMICOLON .)


state 110

    (33) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE . LCBRACKET comandos RCBRACKET

    LCBRACKET       shift and go to state 112


state 111

    (34) repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET . comandos RCBRACKET
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    incrementacao                  shift and go to state 22
    comandos                       shift and go to state 113
    comando                        shift and go to state 16
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 112

    (33) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET . comandos RCBRACKET
    (9) comandos -> . comando
    (10) comandos -> . comandos comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comandos                       shift and go to state 114
    comando                        shift and go to state 16
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 113

    (34) repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos . RCBRACKET
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    RCBRACKET       shift and go to state 115
    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    incrementacao                  shift and go to state 22
    comando                        shift and go to state 36
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21

state 114

    (33) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos . RCBRACKET
    (10) comandos -> comandos . comando
    (11) comando -> . atribuicao
    (12) comando -> . escrita
    (13) comando -> . selecao
    (14) comando -> . repeticao
    (15) comando -> . call
    (16) comando -> . incrementacao SEMICOLON
    (18) atribuicao -> . ID ASSIGN expressao SEMICOLON
    (19) atribuicao -> . ID ASSIGN leitura
    (20) escrita -> . WRITE LBRACKET argumento RBRACKET SEMICOLON
    (32) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (33) selecao -> . IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET
    (34) repeticao -> . FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET
    (35) repeticao -> . WHILE LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET
    (48) call -> . ID LBRACKET RBRACKET SEMICOLON
    (36) incrementacao -> . ID INCREMENT
    (37) incrementacao -> . ID DECREMENT

    RCBRACKET       shift and go to state 116
    ID              shift and go to state 35
    WRITE           shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26

    comando                        shift and go to state 36
    atribuicao                     shift and go to state 17
    escrita                        shift and go to state 18
    selecao                        shift and go to state 19
    repeticao                      shift and go to state 20
    call                           shift and go to state 21
    incrementacao                  shift and go to state 22

state 115

    (34) repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET .

    ID              reduce using rule 34 (repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET .)
    WRITE           reduce using rule 34 (repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET .)
    IF              reduce using rule 34 (repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET .)
    FOR             reduce using rule 34 (repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET .)
    WHILE           reduce using rule 34 (repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET .)
    $end            reduce using rule 34 (repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET .)
    RETURN          reduce using rule 34 (repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET .)
    RCBRACKET       reduce using rule 34 (repeticao -> FOR LBRACKET declaracao condicao SEMICOLON incrementacao RBRACKET LCBRACKET comandos RCBRACKET .)


state 116

    (33) selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET .

    ID              reduce using rule 33 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET .)
    WRITE           reduce using rule 33 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET .)
    IF              reduce using rule 33 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET .)
    FOR             reduce using rule 33 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET .)
    WHILE           reduce using rule 33 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET .)
    $end            reduce using rule 33 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET .)
    RETURN          reduce using rule 33 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET .)
    RCBRACKET       reduce using rule 33 (selecao -> IF LBRACKET condicao RBRACKET LCBRACKET comandos RCBRACKET ELSE LCBRACKET comandos RCBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 46 resolved as shift
WARNING: reduce/reduce conflict in state 47 resolved using rule (declaracao -> ID ASSIGN leitura)
WARNING: rejected rule (atribuicao -> ID ASSIGN leitura) in state 47
